# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"

    # test audio
    "snd_pci_acp6x"
  ];


  boot.kernelParams = [
    # fn key lock disabled by default
    "asus_wmi.fnlock_default=N"
  ];

  systemd.services.set-asus-fan-mode = {
    description = "Set Asus Laptop Fan Mode to Performance Mode";
    wantedBy = [ "multi-user.target" ];
    script = ''
      echo "0x00110019" > /sys/kernel/debug/asus-nb-wmi/dev_id &&
      echo "2" > /sys/kernel/debug/asus-nb-wmi/ctrl_param &&
      cat /sys/kernel/debug/asus-nb-wmi/devs || true
    '';
  };

  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/d6411291-60ec-4373-a2b8-1046845227a7";
    fsType = "ext4";
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/bfce04b5-cc32-49bf-9a9a-fdc11fe0947c";
    fsType = "ext4";
  };

  fileSystems."/mnt/winux" = {
    device = "/dev/disk/by-uuid/E7FC-B169";
    fsType = "exfat";
    options = [
      "users"
      "nofail"
      "uid=1000"
      "gid=100"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/546A-4774";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [ { device = "/dev/disk/by-uuid/3a5cec3a-f85d-438e-99a4-6ac96d857f4b"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
